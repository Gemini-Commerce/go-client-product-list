/*
Collection Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package productlist

import (
	"encoding/json"
)

// checks if the ProductlistCreateProductListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductlistCreateProductListResponse{}

// ProductlistCreateProductListResponse struct for ProductlistCreateProductListResponse
type ProductlistCreateProductListResponse struct {
	List *ProductlistProductListEntity `json:"list,omitempty"`
	Errors []ProductlistProductListError `json:"errors,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ProductlistCreateProductListResponse ProductlistCreateProductListResponse

// NewProductlistCreateProductListResponse instantiates a new ProductlistCreateProductListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductlistCreateProductListResponse() *ProductlistCreateProductListResponse {
	this := ProductlistCreateProductListResponse{}
	return &this
}

// NewProductlistCreateProductListResponseWithDefaults instantiates a new ProductlistCreateProductListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductlistCreateProductListResponseWithDefaults() *ProductlistCreateProductListResponse {
	this := ProductlistCreateProductListResponse{}
	return &this
}

// GetList returns the List field value if set, zero value otherwise.
func (o *ProductlistCreateProductListResponse) GetList() ProductlistProductListEntity {
	if o == nil || IsNil(o.List) {
		var ret ProductlistProductListEntity
		return ret
	}
	return *o.List
}

// GetListOk returns a tuple with the List field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductlistCreateProductListResponse) GetListOk() (*ProductlistProductListEntity, bool) {
	if o == nil || IsNil(o.List) {
		return nil, false
	}
	return o.List, true
}

// HasList returns a boolean if a field has been set.
func (o *ProductlistCreateProductListResponse) HasList() bool {
	if o != nil && !IsNil(o.List) {
		return true
	}

	return false
}

// SetList gets a reference to the given ProductlistProductListEntity and assigns it to the List field.
func (o *ProductlistCreateProductListResponse) SetList(v ProductlistProductListEntity) {
	o.List = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *ProductlistCreateProductListResponse) GetErrors() []ProductlistProductListError {
	if o == nil || IsNil(o.Errors) {
		var ret []ProductlistProductListError
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductlistCreateProductListResponse) GetErrorsOk() ([]ProductlistProductListError, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *ProductlistCreateProductListResponse) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []ProductlistProductListError and assigns it to the Errors field.
func (o *ProductlistCreateProductListResponse) SetErrors(v []ProductlistProductListError) {
	o.Errors = v
}

func (o ProductlistCreateProductListResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductlistCreateProductListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.List) {
		toSerialize["list"] = o.List
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProductlistCreateProductListResponse) UnmarshalJSON(data []byte) (err error) {
	varProductlistCreateProductListResponse := _ProductlistCreateProductListResponse{}

	err = json.Unmarshal(data, &varProductlistCreateProductListResponse)

	if err != nil {
		return err
	}

	*o = ProductlistCreateProductListResponse(varProductlistCreateProductListResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "list")
		delete(additionalProperties, "errors")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *ProductlistCreateProductListResponse) GetValue() interface{} {
	if o == nil || IsNil(o.Type) || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}
// SetValue populate the value of well-known types
func (o *ProductlistCreateProductListResponse) SetValue(value interface{}) {
	if o == nil || IsNil(o.Type) || IsNil(value) {
		return
	}
    if IsNil(o.AdditionalProperties) {
        o.AdditionalProperties = map[string]interface{}{}
    }
	o.AdditionalProperties["value"] = value
	return
}
type NullableProductlistCreateProductListResponse struct {
	value *ProductlistCreateProductListResponse
	isSet bool
}

func (v NullableProductlistCreateProductListResponse) Get() *ProductlistCreateProductListResponse {
	return v.value
}

func (v *NullableProductlistCreateProductListResponse) Set(val *ProductlistCreateProductListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProductlistCreateProductListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProductlistCreateProductListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductlistCreateProductListResponse(val *ProductlistCreateProductListResponse) *NullableProductlistCreateProductListResponse {
	return &NullableProductlistCreateProductListResponse{value: val, isSet: true}
}

func (v NullableProductlistCreateProductListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductlistCreateProductListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


